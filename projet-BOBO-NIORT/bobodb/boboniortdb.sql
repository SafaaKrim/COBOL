/*CREATE DATABASE boboniortdb; */

CREATE TABLE INSURANCE (
  INSURANCE_NAME varchar(30),
  INSURANCE_ADRESS1 varchar(50),
  INSURANCE_ADRESS2 varchar(50),
  INSURANCE_ZIPCODE varchar(15),
  INSURANCE_TOWN varchar(50),
  INSURANCE_COUNTRY varchar(20)
);

CREATE TABLE USER_TAB (
  UUID_USER UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  USER_IDENTIFICATION varchar (10)      NOT NULL,
  USER_PASSWORD varchar (30)            NOT NULL,
  USER_AUTHORIZATION varchar (1)
);

CREATE TABLE FUNCTION_TAB (
  UUID_FUNCTION UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  FUNCTION_LARGELABEL varchar (80),
  FUNCTION_ROOT  varchar (36)
);

CREATE TABLE CUSTOMER (
  UUID_CUSTOMER UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  CUSTOMER_GENDER VARCHAR(10),
  CUSTOMER_LASTNAME VARCHAR(50),
  CUSTOMER_FIRSTNAME VARCHAR(50),
  CUSTOMER_ADRESS1 VARCHAR(50),
  CUSTOMER_ADRESS2 VARCHAR(50),
  CUSTOMER_ZIPCODE VARCHAR(15),
  CUSTOMER_TOWN VARCHAR(50),
  CUSTOMER_COUNTRY VARCHAR(20),
  CUSTOMER_PHONE INTEGER,
  CUSTOMER_MAIL VARCHAR(50),
  CUSTOMER_BIRTH_DATE DATE,
  CUSTOMER_DOCTOR VARCHAR(50),
  CUSTOMER_CODE_SECU BIGINT,
  CUSTOMER_CODE_IBAN VARCHAR(34),
  CUSTOMER_NBCHILDREN INTEGER,
  CUSTOMER_COUPLE BOOLEAN,
  CUSTOMER_CREATE_DATE DATE,
  CUSTOMER_UPDATE_DATE DATE,
  CUSTOMER_CLOSE_DATE DATE,
  CUSTOMER_ACTIVE VARCHAR(1)
);

CREATE TABLE CONTRACT (
  UUID_CONTRACT UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  CONTRACT_LARGELABEL VARCHAR(80),
  CONTRACT_CREATE_DATE DATE,
  CONTRACT_UPDATE_DATE DATE,
  CONTRACT_ACTIVE VARCHAR(1)
);

CREATE TABLE GUARANTEE (
  UUID_GUARANTEE UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  GUARANTEE_FLAG varchar (1) , 
  GUARANTEE_LARGELABEL varchar (80),
  GUARANTEE_DATE_ACTIVATION date,
  GUARANTEE_LOYALTY integer,
  GUARANTEE_TYPE varchar (1),
  GUARANTEE_AMOUNT decimal,
  GUARANTEE_PERIODICITY integer,
  GUARANTEE_ROOT  varchar(36),
  GUARANTEE_CREATE_DATE date,
  GUARANTEE_UPDATE_DATE date,
  GUARANTEE_ACTIVE varchar (1)
);

CREATE TABLE CONTRACT_GUARANTEE (
  UUID_CONTRACT_GUARANTEE UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  UUID_CONTRACT UUID NOT NULL,
  UUID_GUARANTEE UUID NOT NULL,
  CONTRACT_GUARANTEE_CREATE_DATE date,
  CONTRACT_GUARANTEE_UPDATE_DATE date,
  CONTRACT_GUARANTEE_ACTIVE varchar(1),
  FOREIGN KEY (UUID_CONTRACT) REFERENCES CONTRACT (UUID_CONTRACT),
  FOREIGN KEY (UUID_GUARANTEE) REFERENCES GUARANTEE (UUID_GUARANTEE)
);

CREATE TABLE COST_CONDITION (
  UUID_COST_CONDITION UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  UUID_GUARANTEE UUID NOT NULL,
  COST_CONDITION_TYPE varchar(1),
  COST_CONDITION_AGEMIN integer,
  COST_CONDITION_AGEMAX integer,
  COST_CONDITION_COUPLE boolean,
  COST_CONDITION_COST decimal,
  COST_CONDITION_CREATE_DATE date,
  COST_CONDITION_UPDATE_DATE date,
  FOREIGN KEY (UUID_GUARANTEE) REFERENCES GUARANTEE (UUID_GUARANTEE)
);

CREATE TABLE CUSTOMER_CONTRACT (
  UUID_CUSTOMER_CONTRACT UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  UUID_CUSTOMER UUID NOT NULL,
  UUID_CONTRACT UUID NOT NULL,
  CUSTOMER_CONTRACT_NUM varchar (10),
  CUSTOMER_CONTRACT_COST decimal,
  CUSTOMER_CONTRACT_DATE_DUEDATE date,
  CUSTOMER_CONTRACT_PAYMENT_TYPE varchar (1),
  CUSTOMER_CONTRACT_CREATE_DATE date,
  CUSTOMER_CONTRACT_UPDATE_DATE date,
  CUSTOMER_CONTRACT_ACTIVE varchar (1),
  FOREIGN KEY (UUID_CUSTOMER) REFERENCES CUSTOMER(UUID_CUSTOMER),
  FOREIGN KEY (UUID_CONTRACT) REFERENCES CONTRACT (UUID_CONTRACT)
);

CREATE TABLE CUSTOMER_CONTRACT_GUARANTEE (
  UUID_CUSTOMER_CONTRACT_GUARANTEE UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  UUID_CUSTOMER UUID NOT NULL,
  UUID_CONTRACT UUID NOT NULL,
  UUID_GUARANTEE UUID NOT NULL,
  CUSTOMER_CONTRACT_GUARANTEE_CREATE_DATE date,
  CUSTOMER_CONTRACT_GUARANTEE_UPDATE_DATE date,
  CUSTOMER_CONTRACT_GUARANTEE_ACTIVE varchar (1),
  FOREIGN KEY (UUID_CONTRACT) REFERENCES CONTRACT (UUID_CONTRACT),
  FOREIGN KEY (UUID_CUSTOMER) REFERENCES CUSTOMER (UUID_CUSTOMER),
  FOREIGN KEY (UUID_GUARANTEE) REFERENCES GUARANTEE (UUID_GUARANTEE)
);

CREATE TABLE INVOICE (
  UUID_INVOICE UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  INVOICE_NUM varchar (10) NOT NULL, 
  UUID_CUSTOMER UUID NOT NULL,
  INVOICE_CREATE_DATE date,
  INVOICE_CLOSE_DATE date,
  FOREIGN KEY (UUID_CUSTOMER) REFERENCES CUSTOMER (UUID_CUSTOMER)
);

CREATE TABLE INVOICE_LINE (
  UUID_INVOICE_LINE UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  UUID_INVOICE UUID NOT NULL,
  UUID_CONTRACT UUID NOT NULL,
  FOREIGN KEY (UUID_INVOICE) REFERENCES INVOICE (UUID_INVOICE),
  FOREIGN KEY (UUID_CONTRACT) REFERENCES CONTRACT (UUID_CONTRACT)
);

CREATE TABLE INVOICE_DUEDATE (
  UUID_INVOICE_DUEDATE UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  UUID_INVOICE UUID NOT NULL,
  DUEDATE_NUM  integer NOT NULL,
  DUEDATE_AMOUNT  decimal,
  DUEDATE_PAID  boolean,
  DUEDATE_RELAUNCH integer,
  DATE_LAST_RELAUNCH date,
  FOREIGN KEY (UUID_INVOICE) REFERENCES INVOICE (UUID_INVOICE)
);

CREATE TABLE REIMBURSEMENT (
  UUID_REIMBURSEMENT UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  UUID_CUSTOMER UUID NOT NULL,
  UUID_CONTRACT UUID NOT NULL,
  UUID_GUARANTEE UUID NOT NULL,
  REIMBURSEMENT_DATE_CREATION date ,
  REIMBURSEMENT_AMOUNT  decimal,
  REIMBURSEMENT_PAID  boolean,
  REIMBURSEMENT_DATE  date,
  REIMBURSEMENT_TYPE  varchar (1),
  FOREIGN KEY (UUID_GUARANTEE) REFERENCES GUARANTEE (UUID_GUARANTEE),
  FOREIGN KEY (UUID_CUSTOMER) REFERENCES CUSTOMER (UUID_CUSTOMER),
  FOREIGN KEY (UUID_CONTRACT) REFERENCES CONTRACT (UUID_CONTRACT)
);

CREATE TABLE ASKED_REIMBURSEMENT (
  UUID_ASKED_REIMBURSEMENT UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  UUID_CUSTOMER UUID ,
  UUID_CONTRACT UUID ,
  UUID_GUARANTEE UUID,
  REIMBURSEMENT_DATE_CREATION date,
  REIMBURSEMENT_AMOUNT decimal ,
  REIMBURSEMENT_SECU_AMOUNT decimal,
  REIMBURSEMENT_SECU_BASE decimal,
  REIMBURSEMENT_TOPAY  boolean,
  REIMBURSEMENT_REASON varchar (50),
  REIMBURSEMENT_TYPE  varchar (1)
);

